DROP TABLE IF EXISTS public.online_user_table;
DROP TABLE IF EXISTS public.users_receipt_summary;
DROP TABLE IF EXISTS public.activity_table;
DROP TABLE IF EXISTS public.pricelist_table;
DROP TABLE IF EXISTS public.uploadedFiles;
DROP TABLE IF EXISTS public.shops_and_users_table;
DROP TABLE IF EXISTS public.user_refresh_table;
DROP TABLE IF EXISTS public.managers_users_table;
DROP TABLE IF EXISTS public.statistics_table;
DROP TABLE IF EXISTS public.user_table;
DROP TABLE IF EXISTS public.role_table;

CREATE TABLE IF NOT EXISTS public.role_table
(
    id int NOT NULL GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name varchar(50) NOT NULL
);

insert into role_table(name) values ('ROLE_ADMIN');
insert into role_table(name) values ('ROLE_MODERATOR');
insert into role_table(name) values ('ROLE_SUPPLIER');
insert into role_table(name) values ('ROLE_KEYMANAGER');
insert into role_table(name) values ('ROLE_SHOP');
insert into role_table(name) values ('ROLE_USER');

CREATE TABLE IF NOT EXISTS public.activity_table
(
    id int NOT NULL GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    activity_time timestamp with time zone NOT NULL,
    activity_type varchar(50) NOT NULL,
    user_id int NOT NULL,
    activity_message varchar(3000) NOT NULL
);

CREATE TABLE IF NOT EXISTS public.user_table
(
    id int NOT NULL GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    login varchar(100) NOT NULL,
    password varchar(500) NOT NULL,
    email varchar(100),
    full_name varchar(100),
    company_name varchar(100),
    phone_number varchar(100),
    address varchar(500),
    certain_place_address varchar(500),
    appAccess varchar(50),
    role_id  integer,
    registration_time timestamp with time zone,
    enabled boolean
);

create unique index user_table_login_uindex
    on user_table (login);

CREATE TABLE IF NOT EXISTS public.online_user_table
(
    user_id int NOT NULL PRIMARY KEY,
    last_ping_time timestamp with time zone NOT NULL
);

CREATE TABLE IF NOT EXISTS public.users_receipt_summary
(
    id int NOT NULL GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    activity_time timestamp with time zone NOT NULL,
    user_id int NOT NULL,
    company_name varchar(100),
    certain_place_address varchar(500),
    type varchar(200) NOT NULL,
    materials varchar(1000) NOT NULL,
    material_price double precision NOT NULL,
    add_price double precision NOT NULL,
    all_price double precision NOT NULL,
    main_coeff double precision NOT NULL,
    material_coeff double precision NOT NULL,
    slabs double precision NOT NULL,
    product_square double precision NOT NULL
);

CREATE TABLE IF NOT EXISTS public.shops_users_table
(
    id int NOT NULL GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    shop_id int NOT NULL,
    user_id int NOT NULL
);

CREATE TABLE IF NOT EXISTS public.managers_users_table
(
    id int NOT NULL GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    key_manager_id int NOT NULL,
    user_id int NOT NULL
);

CREATE TABLE IF NOT EXISTS public.user_refresh_table
(
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id int NOT NULL,
    refresh_token varchar(300) NOT NULL
);

CREATE TABLE IF NOT EXISTS public.uploadedfiles
(

    id          int NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    name        varchar(200),
    path        varchar(300),
    url         varchar(400),
    uploadDate  timestamp with time zone,
    size        bigint,
    hashcode    int,
    info        varchar(1000),
    for_clients varchar(500),
    author_id   int,
    PRIMARY KEY (id)
    );

CREATE TABLE  IF NOT EXISTS public.pricelist_table
(
    id         int NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    name       varchar(200),
    path       varchar(300),
    url        varchar(400),
    uploadTime timestamp with time zone NOT NULL,
    info        varchar(1000),
    for_clients varchar(500),
    author_id   int,
    PRIMARY KEY (id)
    );

CREATE TABLE IF NOT EXISTS public.statistics_table
(
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    time_slice timestamp with time zone NOT NULL,
    users_online int NOT NULL,
    new_receipts int NOT NULL,
    new_users int NOT NULL
    );

CREATE TABLE IF NOT EXISTS public.claims_table (
    id int NOT NULL GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    timeDate timestamp with time zone NOT NULL,
    user_id int NOT NULL,
    type varchar(50),
    name varchar(200),
    path varchar(300),
    url varchar(400),
    responsible_user_id int,
    is_solved boolean
    );

ALTER TABLE "user_table" ADD FOREIGN KEY ("role_id") REFERENCES "role_table" ("id");

ALTER TABLE "online_user_table" ADD FOREIGN KEY ("user_id") REFERENCES "user_table" ("id");

ALTER TABLE "users_receipt_summary" ADD FOREIGN KEY ("user_id") REFERENCES "user_table" ("id");

ALTER TABLE "uploadedfiles" ADD FOREIGN KEY ("author_id") REFERENCES "user_table" ("id");

ALTER TABLE "pricelist_table" ADD FOREIGN KEY ("author_id") REFERENCES "user_table" ("id");

ALTER TABLE "activity_table" ADD FOREIGN KEY ("user_id") REFERENCES "user_table" ("id");

ALTER TABLE "managers_users_table" ADD FOREIGN KEY ("key_manager_id") REFERENCES "user_table" ("id");

ALTER TABLE "managers_users_table" ADD FOREIGN KEY ("user_id") REFERENCES "user_table" ("id");

ALTER TABLE "shops_and_users_table" ADD FOREIGN KEY ("shop_id") REFERENCES "user_table" ("id");

ALTER TABLE "shops_and_users_table" ADD FOREIGN KEY ("user_id") REFERENCES "user_table" ("id");

ALTER TABLE "claims_table" ADD FOREIGN KEY ("user_id") REFERENCES "user_table" ("id");